AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
  DomainName:
    Type: String
    Description: "The domain name of website"
    Default: "albertomestrada.com"
  HostedZoneId:
    Type: String
    Description: "The Route53 hosted zone ID used for the domain"
    Default: "Z0974676KCPM8Q4829RJ"
  AcmCertificateArn:
    Type: String
    Description: "The certificate arn for the domain name provided"
    Default: "arn:aws:acm:us-east-1:058264275313:certificate/21bda64a-3097-4e91-b6d8-1f5aff714524"
  IndexDocument:
    Type: String
    Description: "The index document"
    Default: "Resume.html"
  BucketName:
    Type: String
    Description: "Name of S3 bucket hopefully not taken"
    Default: resumeee10596928
  CloudFrontPriceClass:
    Type: String
    Description: "The price class for CloudFront distribution"
    Default: "PriceClass_100"
    AllowedValues:
      - PriceClass_100
      - PriceClass_200
      - PriceClass_All

Resources:
  DnsRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt Distribution.DomainName
        HostedZoneId: "Z2FDTNDATAQYW2"

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketName
      PolicyDocument:
        Statement:
          - Effect: "Allow"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${BucketName}/*"
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessIdentity}"

  OriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref AWS::StackName

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: "true"
        Comment: !Ref AWS::StackName
        DefaultRootObject: !Ref IndexDocument
        HttpVersion: http2
        Origins:
          - DomainName: !Sub "${Bucket}.s3.${AWS::Region}.amazonaws.com"
            Id: bucketOrigin
            S3OriginConfig:
              OriginAccessIdentity: !Sub origin-access-identity/cloudfront/${OriginAccessIdentity}
        DefaultCacheBehavior:
          Compress: "true"
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          TargetOriginId: bucketOrigin
          ForwardedValues:
            QueryString: "false"
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: !Ref CloudFrontPriceClass
        Aliases:
          - !Ref DomainName
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only

  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: GET
            Path: /path
            TimeoutInMillis: 15000
            RouteSettings:
              ThrottlingBurstLimit: 600
      Handler: index.handler
      Runtime: python3.12
      Role: arn:aws:iam::058264275313:role/AdminServiceRole
      CodeUri: s3://lambdascript.10596928/lambdaFunction.txt

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref StageName
      Tags:
        Tag: Value
        RouteSettings:
          "GET /path":
            ThrottlingBurstLimit: 500 # overridden in HttpAi Event
        StageVariables:
          StageVar: Value
        FailOnWarnings: true

  DynamoDB:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKay: ID
      TableName: visitortableDB

Outputs:
  HttpApiUrl:
    Description: URL of API endpoint
    Value:
      Fn::Sub: "https://${HttpApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/${StageName}/"
  HttpApiId:
    Description: Api id of HttpApi
    Value:
      Ref: HttpApi
  BucketName:
    Description: The S3 bucket name
    Value: !Ref Bucket
  CloudFrontDistribution:
    Description: The CloudFront distribution in front of the S3 bucket
    Value: !Ref Distribution

